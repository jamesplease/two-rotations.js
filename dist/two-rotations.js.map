{"version":3,"sources":["two-rotations.js"],"names":[],"mappings":"AAAA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1B,SAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,EAAE,GACzF,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAC5D,MAAM,CAAC,YAAY,GAAG,OAAO,EAAE,CAAA;CAChC,CAAA,CAAC,IAAI,EAAE,YAAY;AAAE,cAAY,CAAC;;;;;;;;AAQjC,WAAS,eAAe,CAAC,GAAG,EAAE,KAAK,EAAE;AACnC,QAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC3B,QAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC3B,QAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACzB,QAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;AAEzB,WAAO,CACL,CAAE,IAAI,EAAU,CAAC,EAAK,IAAI,CAAU,EACpC,CAAE,IAAI,GAAG,IAAI,EAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,CAAE,EACpC,CAAE,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,CAAG,CACrC,CAAC;GACH;;AAED,WAAS,YAAY,CAAC,CAAC,EAAsB;QAApB,GAAG,gCAAG,CAAC;QAAE,KAAK,gCAAG,CAAC;;;;AAIzC,QAAI,CAAC,GAAG,eAAe,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;;;AAGpC,WAAO,CACL,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAChD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAChD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjD,CAAC;GACH;;AAED,MAAI,aAAa,GAAG,YAAY,CAAC;;AAEjC,SAAO,aAAa,CAAC;CAEtB,CAAC,CAAE","file":"two-rotations.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.TwoRotations = factory()\n}(this, function () { 'use strict';\n\n  // Generate a rotation matrix from a given yaw and pitch\n  // This matrix is a combination of two rotations:\n  // Ry * Rx\n  // Where Ri is the 3d rotation matrix about that axis\n  // We call the angle about the y-axis the 'yaw,'\n  // and the angle about the x-axis is the 'pitch.'\n  function matrixGenerator(yaw, pitch) {\n    var cosP = Math.cos(pitch);\n    var sinP = Math.sin(pitch);\n    var cosY = Math.cos(yaw);\n    var sinY = Math.sin(yaw);\n\n    return [\n      [ cosY,         0,    sinY         ],\n      [ sinY * sinP,  cosP, -sinP * cosY ],\n      [ -sinY * cosP, sinP, cosP * cosY  ]\n    ];\n  }\n\n  function TwoRotations(v, yaw = 0, pitch = 0) {\n\n    // Generate our rotation matrix given the yaw and pitch.\n    // yaw and pitch are given in radians\n    var t = matrixGenerator(yaw, pitch);\n\n    // Return the transformed vector\n    return [\n      v[0] * t[0][0] + v[1] * t[0][1] + v[2] * t[0][2],\n      v[0] * t[1][0] + v[1] * t[1][1] + v[2] * t[1][2],\n      v[0] * t[2][0] + v[1] * t[2][1] + v[2] * t[2][2]\n    ];\n  }\n\n  var two_rotations = TwoRotations;\n\n  return two_rotations;\n\n}));\n"],"sourceRoot":"/source/"}